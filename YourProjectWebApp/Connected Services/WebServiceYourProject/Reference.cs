//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YourProjectWebApp.WebServiceYourProject {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebServiceYourProject.YourProjectServiceSoap")]
    public interface YourProjectServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllPatrons", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Patron[] GetAllPatrons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllPatrons", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Patron[]> GetAllPatronsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSinglePatron", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Patron GetSinglePatron(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSinglePatron", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Patron> GetSinglePatronAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePatron", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Patron UpdatePatron(YourProjectWebApp.WebServiceYourProject.Patron patron);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePatron", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Patron> UpdatePatronAsync(YourProjectWebApp.WebServiceYourProject.Patron patron);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePatron", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Patron CreatePatron(YourProjectWebApp.WebServiceYourProject.Patron patron);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePatron", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Patron> CreatePatronAsync(YourProjectWebApp.WebServiceYourProject.Patron patron);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatron", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        bool DeletePatron(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatron", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeletePatronAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllTools", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Tool[] GetAllTools();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllTools", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Tool[]> GetAllToolsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllToolsWithCondition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Tool[] GetAllToolsWithCondition(string condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllToolsWithCondition", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Tool[]> GetAllToolsWithConditionAsync(string condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSingleTool", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Tool GetSingleTool(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSingleTool", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Tool> GetSingleToolAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTool", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Tool UpdateTool(YourProjectWebApp.WebServiceYourProject.Tool tool);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTool", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Tool> UpdateToolAsync(YourProjectWebApp.WebServiceYourProject.Tool tool);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateTool", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Tool CreateTool(YourProjectWebApp.WebServiceYourProject.Tool tool);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateTool", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Tool> CreateToolAsync(YourProjectWebApp.WebServiceYourProject.Tool tool);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteTool", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        bool DeleteTool(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteTool", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteToolAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllBrands", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Brand[] GetAllBrands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllBrands", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Brand[]> GetAllBrandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSingleBrand", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Brand GetSingleBrand(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSingleBrand", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Brand> GetSingleBrandAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateBrand", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Brand UpdateBrand(YourProjectWebApp.WebServiceYourProject.Brand brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateBrand", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Brand> UpdateBrandAsync(YourProjectWebApp.WebServiceYourProject.Brand brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateBrand", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.Brand CreateBrand(YourProjectWebApp.WebServiceYourProject.Brand brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateBrand", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Brand> CreateBrandAsync(YourProjectWebApp.WebServiceYourProject.Brand brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteBrand", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        bool DeleteBrand(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteBrand", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteBrandAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllInvoices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice[] GetAllInvoices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllInvoices", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice[]> GetAllInvoicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSinglePatronToolLoanInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice GetSinglePatronToolLoanInvoice(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSinglePatronToolLoanInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice> GetSinglePatronToolLoanInvoiceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePatronToolLoanInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice UpdatePatronToolLoanInvoice(YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePatronToolLoanInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice> UpdatePatronToolLoanInvoiceAsync(YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePatronToolLoanInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice CreatePatronToolLoanInvoice(YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePatronToolLoanInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice> CreatePatronToolLoanInvoiceAsync(YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatronToolLoanInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        bool DeletePatronToolLoanInvoice(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatronToolLoanInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeletePatronToolLoanInvoiceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidCredentials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CRUDMethods))]
        bool ValidCredentials(YourProjectWebApp.WebServiceYourProject.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidCredentials", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidCredentialsAsync(YourProjectWebApp.WebServiceYourProject.Staff staff);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Patron : CRUDMethods {
        
        private long idField;
        
        private string patronNameField;
        
        private bool isGroupField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PatronName {
            get {
                return this.patronNameField;
            }
            set {
                this.patronNameField = value;
                this.RaisePropertyChanged("PatronName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsGroup {
            get {
                return this.isGroupField;
            }
            set {
                this.isGroupField = value;
                this.RaisePropertyChanged("IsGroup");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Staff))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatronToolLoanInvoice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Brand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Tool))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Patron))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CRUDMethods : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Staff : CRUDMethods {
        
        private long idField;
        
        private string userNameField;
        
        private string userPasswordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
                this.RaisePropertyChanged("UserPassword");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatronToolLoanInvoice : CRUDMethods {
        
        private long idField;
        
        private int toolIdField;
        
        private int patronIdField;
        
        private string dateRentedField;
        
        private string dateReturnedField;
        
        private string workspaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ToolId {
            get {
                return this.toolIdField;
            }
            set {
                this.toolIdField = value;
                this.RaisePropertyChanged("ToolId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int PatronId {
            get {
                return this.patronIdField;
            }
            set {
                this.patronIdField = value;
                this.RaisePropertyChanged("PatronId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string DateRented {
            get {
                return this.dateRentedField;
            }
            set {
                this.dateRentedField = value;
                this.RaisePropertyChanged("DateRented");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DateReturned {
            get {
                return this.dateReturnedField;
            }
            set {
                this.dateReturnedField = value;
                this.RaisePropertyChanged("DateReturned");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Workspace {
            get {
                return this.workspaceField;
            }
            set {
                this.workspaceField = value;
                this.RaisePropertyChanged("Workspace");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Brand : CRUDMethods {
        
        private long idField;
        
        private string brandNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BrandName {
            get {
                return this.brandNameField;
            }
            set {
                this.brandNameField = value;
                this.RaisePropertyChanged("BrandName");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Tool : CRUDMethods {
        
        private long idField;
        
        private int brandIdField;
        
        private string descriptionField;
        
        private bool activeField;
        
        private string commentsField;
        
        private bool inUseField;
        
        public Tool() {
            this.activeField = true;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int BrandId {
            get {
                return this.brandIdField;
            }
            set {
                this.brandIdField = value;
                this.RaisePropertyChanged("BrandId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
                this.RaisePropertyChanged("Active");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
                this.RaisePropertyChanged("Comments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool InUse {
            get {
                return this.inUseField;
            }
            set {
                this.inUseField = value;
                this.RaisePropertyChanged("InUse");
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface YourProjectServiceSoapChannel : YourProjectWebApp.WebServiceYourProject.YourProjectServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class YourProjectServiceSoapClient : System.ServiceModel.ClientBase<YourProjectWebApp.WebServiceYourProject.YourProjectServiceSoap>, YourProjectWebApp.WebServiceYourProject.YourProjectServiceSoap {
        
        public YourProjectServiceSoapClient() {
        }
        
        public YourProjectServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public YourProjectServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public YourProjectServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public YourProjectServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public YourProjectWebApp.WebServiceYourProject.Patron[] GetAllPatrons() {
            return base.Channel.GetAllPatrons();
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Patron[]> GetAllPatronsAsync() {
            return base.Channel.GetAllPatronsAsync();
        }
        
        public YourProjectWebApp.WebServiceYourProject.Patron GetSinglePatron(int id) {
            return base.Channel.GetSinglePatron(id);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Patron> GetSinglePatronAsync(int id) {
            return base.Channel.GetSinglePatronAsync(id);
        }
        
        public YourProjectWebApp.WebServiceYourProject.Patron UpdatePatron(YourProjectWebApp.WebServiceYourProject.Patron patron) {
            return base.Channel.UpdatePatron(patron);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Patron> UpdatePatronAsync(YourProjectWebApp.WebServiceYourProject.Patron patron) {
            return base.Channel.UpdatePatronAsync(patron);
        }
        
        public YourProjectWebApp.WebServiceYourProject.Patron CreatePatron(YourProjectWebApp.WebServiceYourProject.Patron patron) {
            return base.Channel.CreatePatron(patron);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Patron> CreatePatronAsync(YourProjectWebApp.WebServiceYourProject.Patron patron) {
            return base.Channel.CreatePatronAsync(patron);
        }
        
        public bool DeletePatron(int id) {
            return base.Channel.DeletePatron(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePatronAsync(int id) {
            return base.Channel.DeletePatronAsync(id);
        }
        
        public YourProjectWebApp.WebServiceYourProject.Tool[] GetAllTools() {
            return base.Channel.GetAllTools();
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Tool[]> GetAllToolsAsync() {
            return base.Channel.GetAllToolsAsync();
        }
        
        public YourProjectWebApp.WebServiceYourProject.Tool[] GetAllToolsWithCondition(string condition) {
            return base.Channel.GetAllToolsWithCondition(condition);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Tool[]> GetAllToolsWithConditionAsync(string condition) {
            return base.Channel.GetAllToolsWithConditionAsync(condition);
        }
        
        public YourProjectWebApp.WebServiceYourProject.Tool GetSingleTool(int id) {
            return base.Channel.GetSingleTool(id);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Tool> GetSingleToolAsync(int id) {
            return base.Channel.GetSingleToolAsync(id);
        }
        
        public YourProjectWebApp.WebServiceYourProject.Tool UpdateTool(YourProjectWebApp.WebServiceYourProject.Tool tool) {
            return base.Channel.UpdateTool(tool);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Tool> UpdateToolAsync(YourProjectWebApp.WebServiceYourProject.Tool tool) {
            return base.Channel.UpdateToolAsync(tool);
        }
        
        public YourProjectWebApp.WebServiceYourProject.Tool CreateTool(YourProjectWebApp.WebServiceYourProject.Tool tool) {
            return base.Channel.CreateTool(tool);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Tool> CreateToolAsync(YourProjectWebApp.WebServiceYourProject.Tool tool) {
            return base.Channel.CreateToolAsync(tool);
        }
        
        public bool DeleteTool(int id) {
            return base.Channel.DeleteTool(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteToolAsync(int id) {
            return base.Channel.DeleteToolAsync(id);
        }
        
        public YourProjectWebApp.WebServiceYourProject.Brand[] GetAllBrands() {
            return base.Channel.GetAllBrands();
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Brand[]> GetAllBrandsAsync() {
            return base.Channel.GetAllBrandsAsync();
        }
        
        public YourProjectWebApp.WebServiceYourProject.Brand GetSingleBrand(int id) {
            return base.Channel.GetSingleBrand(id);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Brand> GetSingleBrandAsync(int id) {
            return base.Channel.GetSingleBrandAsync(id);
        }
        
        public YourProjectWebApp.WebServiceYourProject.Brand UpdateBrand(YourProjectWebApp.WebServiceYourProject.Brand brand) {
            return base.Channel.UpdateBrand(brand);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Brand> UpdateBrandAsync(YourProjectWebApp.WebServiceYourProject.Brand brand) {
            return base.Channel.UpdateBrandAsync(brand);
        }
        
        public YourProjectWebApp.WebServiceYourProject.Brand CreateBrand(YourProjectWebApp.WebServiceYourProject.Brand brand) {
            return base.Channel.CreateBrand(brand);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.Brand> CreateBrandAsync(YourProjectWebApp.WebServiceYourProject.Brand brand) {
            return base.Channel.CreateBrandAsync(brand);
        }
        
        public bool DeleteBrand(int id) {
            return base.Channel.DeleteBrand(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBrandAsync(int id) {
            return base.Channel.DeleteBrandAsync(id);
        }
        
        public YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice[] GetAllInvoices() {
            return base.Channel.GetAllInvoices();
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice[]> GetAllInvoicesAsync() {
            return base.Channel.GetAllInvoicesAsync();
        }
        
        public YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice GetSinglePatronToolLoanInvoice(int id) {
            return base.Channel.GetSinglePatronToolLoanInvoice(id);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice> GetSinglePatronToolLoanInvoiceAsync(int id) {
            return base.Channel.GetSinglePatronToolLoanInvoiceAsync(id);
        }
        
        public YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice UpdatePatronToolLoanInvoice(YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice invoice) {
            return base.Channel.UpdatePatronToolLoanInvoice(invoice);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice> UpdatePatronToolLoanInvoiceAsync(YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice invoice) {
            return base.Channel.UpdatePatronToolLoanInvoiceAsync(invoice);
        }
        
        public YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice CreatePatronToolLoanInvoice(YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice invoice) {
            return base.Channel.CreatePatronToolLoanInvoice(invoice);
        }
        
        public System.Threading.Tasks.Task<YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice> CreatePatronToolLoanInvoiceAsync(YourProjectWebApp.WebServiceYourProject.PatronToolLoanInvoice invoice) {
            return base.Channel.CreatePatronToolLoanInvoiceAsync(invoice);
        }
        
        public bool DeletePatronToolLoanInvoice(int id) {
            return base.Channel.DeletePatronToolLoanInvoice(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePatronToolLoanInvoiceAsync(int id) {
            return base.Channel.DeletePatronToolLoanInvoiceAsync(id);
        }
        
        public bool ValidCredentials(YourProjectWebApp.WebServiceYourProject.Staff staff) {
            return base.Channel.ValidCredentials(staff);
        }
        
        public System.Threading.Tasks.Task<bool> ValidCredentialsAsync(YourProjectWebApp.WebServiceYourProject.Staff staff) {
            return base.Channel.ValidCredentialsAsync(staff);
        }
    }
}
